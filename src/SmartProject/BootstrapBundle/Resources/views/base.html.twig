{% spaceless %}
<!DOCTYPE html>

    {% block html_tag %}
        <html>
    {% endblock html_tag %}

    {% block head %}
        <head>
            <meta charset="UTF-8"/>
            {% block head_style %}
                {# Override this block to add your own files! #}
                <link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
                {% stylesheets
                '@SmartProjectBootstrapBundle/Resources/public/select2/select2.css'
                '@SmartProjectBootstrapBundle/Resources/public/bootstrap-datepicker/css/datepicker3.css'
                '@SmartProjectBootstrapBundle/Resources/public/select2-bootstrap/select2-bootstrap.css' %}
                <link href="{{ asset_url }}" type="text/css" rel="stylesheet"/>
                {% endstylesheets %}
                {# To use this without less use the base_css.html.twig template as your base
                 # Be sure you understand whats going on: have a look into
                 # https://github.com/phiamo/MopaBootstrapBundle/blob/master/Resources/doc/css-vs-less.md
                 #}
            {% endblock head_style %}

            <meta name="viewport" content="width=device-width, initial-scale=1.0">

            {% block head_script %}
                {# Overwrite this block to add your own js here, to get them generated into final files
                {% javascripts
                    'http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js'
                %}
                    <script type="text/javascript" src="{{ asset_url }}"></script>
                {% endjavascripts %}
                 #}
            {% endblock head_script %}

            <title>{% block title %}Mopa Bootstrap Bundle{% endblock title %}</title>
            <link rel="shortcut icon" href="{{ asset('favicon.ico') }}"/>
            {% block head_bottom %}
            {% endblock head_bottom %}
        </head>
    {% endblock head %}

    {% block body_tag %}
<body data-spy="scroll">
    {% endblock body_tag %}

    {% block body_start %}
    {% endblock body_start %}

    {% block body %}
        {% block navbar %}
            <!-- No navbar included here to reduce dependencies, see https://github.com/phiamo/MopaBootstrapSandboxBundle/blob/master/Resources/views/base.html.twig for howto include it -->
        {% endblock navbar %}

    {% block container %}
    {% block container_div_start %}<div class="{% block container_class %}container{% endblock container_class %}">{% endblock container_div_start %}
        {% block header %}
        {% endblock header %}

    {% block content_div_start %}
        <div class="content">{% endblock content_div_start %}
        {% block page_header %}
            <div class="page-header">
                <h2>{% block headline %}{% endblock headline %}</h2>
                {% block headline_sub %}{% endblock headline_sub %}
            </div>
        {% endblock page_header %}

        {% block flashes %}
        {% endblock flashes %}

        {% block content_row %}
            <div class="row">
                {% block content %}
                    <div class="col-sm-9">
                        {% block content_content %}
                            <strong></strong>
                        {% endblock content_content %}
                    </div>
                    <div class="col-sm-3 ">
                        {% block content_sidebar %}
                            <h2>Sidebar</h2>
                        {% endblock content_sidebar %}
                    </div>
                {% endblock content %}
            </div>
        {% endblock content_row %}
    {% block content_div_end %}</div>{% endblock content_div_end %}
    {% block footer_tag_start %}
        <footer>
    {% endblock footer_tag_start %}
        {% block footer %}{% endblock footer %}
    {% block footer_tag_end %}
        </footer>
    {% endblock footer_tag_end %}
    {% block container_div_end %}</div><!-- /container -->{% endblock container_div_end %}
    {% endblock container %}

    {% block body_end_before_js %}
        <div id="footer">
            <div class="container">
                {% block body_end_before_js_content %}
                    <!-- Sticky Footer -->
                {% endblock body_end_before_js_content %}
            </div>
        </div>
    {% endblock body_end_before_js %}

    {% block foot_script %}
        {# To only use a subset or add more js overwrite and copy paste this block
        To speed up page loads save a copy of jQuery in your project and override this block to include the correct path
        Otherwise the regeneration is done on every load in dev more with use_controller: true
         #}
    {% block foot_script_assetic %}
        <script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.min.js"></script>

        {% javascripts output='js/bootstrap_compiled.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/tooltip.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/affix.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/alert.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/button.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/carousel.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/collapse.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/modal.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/popover.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/scrollspy.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/tab.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap/js/plugins/transition.js'
        '@MopaBootstrapBundle/Resources/public/js/mopabootstrap-collection.js'
        '@MopaBootstrapBundle/Resources/public/js/mopabootstrap-subnav.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap-growl/jquery.bootstrap-growl.min.js'
        '@SmartProjectBootstrapBundle/Resources/public/select2/select2.min.js'
        '@SmartProjectBootstrapBundle/Resources/public/ajaxify/ajaxify.jquery.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootbox/bootbox.js'
        '@SmartProjectBootstrapBundle/Resources/public/bootstrap-datepicker/js/bootstrap-datepicker.js' %}
        <script type="text/javascript" src="{{ asset_url }}"></script>
        {% endjavascripts %}

        <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

    {% endblock foot_script_assetic %}

        <script type="text/javascript">
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
            $('[data-toggle="popover"]').popover();

            {% for flashType, flashMessages in app.session.flashbag %}
            {% for flashMessage in flashMessages %}
            $.bootstrapGrowl("{{ flashMessage|escape }}", {
                ele: 'body',
                type: '{{ flashType }}',
                align: 'right',
                width: 300, // 'auto'
                offset: {from: 'bottom', amount: 20},
                delay: 4000,
                stackup_spacing: 10,
                allow_dismiss: true
            });
            {% endfor %}
            {% endfor %}

            $('.form-field-tag').each(function () {
                var select = $(this);
                select.attr('type', 'hidden');
                var width = select.attr('data-select-width') || '100%';
                select.select2({
                    tags: [],
                    minimumInputLength: 2,
                    maximumInputLength: 20,
                    tokenSeparators: [','],
                    width: width,
                    cache: true,
                    containerCssClass: 'form-control',
                    ajax: { // instead of writing the function to execute the request we use Select2's convenient helper
                        url: '{{ path('project_tags') }}',
                        dataType: 'jsonp',
                        data: function (term, page) {
                            return {
                                q: term,
                                page_limit: 10
                            };
                        },
                        results: function (data, page) { // parse the results into the format expected by Select2.
                            // since we are using custom formatting functions we do not need to alter remote JSON data
                            var results = [];
                            $.each(data.results, function (index, item) {
                                results.push({
                                    id: item.id,
                                    text: item.text
                                });
                            });
                            return {
                                results: results
                            };
                        }
                    },
                    initSelection: function (element, callback) {
                        var data = [];
                        $(element.val().split(',')).each(function () {
                            data.push({id: this, text: this});
                        });
                        callback(data);
                    },
                    createSearchChoice: function (term) {
                        return {id: term, text: term};
                    },
                    formatNoMatches: function (term) {
                        return '';
                    },
                    formatResultCssClass: function (object) {
                        return '';
                    }
                });
            });

            $('.ajaxify').ajaxForm({
                complete: ajaxify_complete
            });

            function ajaxify_complete(jqXHR, textStatus) {
                var container = $(this).closest('.panel-body');
                container.html(jqXHR.responseJSON.content);
                $('.ajaxify', container).ajaxForm({
                    complete: ajaxify_complete
                });
                if (jqXHR.responseJSON.action == 'reload') {
                    location.reload();
                    return;
                }
                else if (jqXHR.responseJSON.action == 'redirect' && jqXHR.responseJSON.url != '') {
                    window.location.href = jqXHR.responseJSON.url;
                    return;
                }
                else if (jqXHR.responseJSON.message != '') {
                    $.bootstrapGrowl(jqXHR.responseJSON.message, {
                        ele: 'body',
                        {#type: '{{ flashType }}',#}
                        align: 'right',
                        width: 300, // 'auto'
                        offset: {from: 'bottom', amount: 20},
                        delay: 10000,
                        stackup_spacing: 10,
                        allow_dismiss: true
                    });
                }
            }

            $('.panel-heading-timeline').each(function () {
                $(this).click(function () {
                    var date = $(this).attr('data-date');
                    $('.timesheet-quick-task .field-datepicker').datepicker('update', date);
                    $('.timesheet-quick-task .field-description').focus();
                });
            });

            $('.btn-group .btn').button();

            $('.btn-group-timeline-mode .btn').click(function () {
                var url = $('input', this).val();
                if (url) {
                    window.location.href = url;
                }
            });

            $('.datepicker-inline').each(function () {
                var picker = $(this);
                picker.datepicker({
                    autoclose: true,
                    format: 'yyyy-mm-dd',
                    weekStart: 1,
                    daysOfWeekDisabled: '0,6'
                });
                picker.datepicker('update', picker[0].innerText);
                picker.datepicker().on('changeDate', function (e) {
                    if (url = picker.attr('data-url')) {
                        window.location.href = url.replace('REPLACE', e.format());
                    }
                });
            });

            function bootbox_update_complete(jqXHR, textStatus) {
//                var tracking_id = jqXHR.trackingId;

                if (jqXHR.status < 400) {
                    bootbox.dialog({
                        title: 'Edit task',
                        message: jqXHR.responseText,
                        onEscape: function () {
                            bootbox.hideAll();
                        },
                        buttons: {
                            cancel: {
                                label: 'Cancel',
                                className: 'btn-default',
                                callback: function () {
                                }
                            },
                            submit: {
                                label: 'Update',
                                className: 'btn-primary',
                                callback: function () {
                                    var form = $('.bootbox form');
                                    $.ajax({
                                        url: form.prop('action'),
                                        method: 'POST',
                                        data: form.serialize(),
                                        complete: function (jqXHR, textStatus) {
                                            if (jqXHR.status < 400) {
                                                if (jqXHR.responseJSON.action == 'reload') {
                                                    bootbox.hideAll();
                                                    location.reload();
                                                    return;
                                                }
                                                else if (jqXHR.responseJSON.action == 'redirect' && jqXHR.responseJSON.url != '') {
                                                    bootbox.hideAll();
                                                    window.location.href = jqXHR.responseJSON.url;
                                                    return;
                                                }
                                            } else {
//                                                console.log(jqXHR.responseJSON);
                                                $('.bootbox form').parent().html(jqXHR.responseJSON.content);
                                                bootbox_update_complete(jqXHR, textStatus);
                                            }
//                                            bootbox.hideAll();
                                        }
                                    });

                                    return false;
                                }
                            }
                        }
                    });
                }

                initProjectSelection(
                        $('.bootbox.modal select.form-field-client'),
                        $('.bootbox.modal select.form-field-project'),
                        $('.bootbox.modal select.form-field-contract')
                );
            }

            $('.table-timeline .btn-group .btn-update').click(function (e) {
//                var tracking_id = $(this).attr('data-tracking-id');
                var update_url = $(this).attr('data-url');

                $.ajax({
                    url: update_url,
                    method: 'GET',
                    complete: bootbox_update_complete
                });
            });

            $('.table-timeline .btn-group .btn-delete').click(function (e) {
                var tracking_id = $(this).attr('data-tracking-id');
                var delete_url = $(this).attr('data-url');
                var table_line = $(this).closest('tr');
                var panel = $(this).closest('.panel');
                var table_total = $('.panel-heading-timeline .pull-right .label', panel);

                if (tracking_id && delete_url) {
                    bootbox.confirm('Do you confirm task deletion ?', function (confirmed) {
                        if (confirmed) {
                            $.ajax({
                                url: delete_url,
                                method: 'POST',
                                complete: function (jqXHR, textStatus) {
                                    if (jqXHR.status < 400) {
                                        table_line.hide(600, function () {
                                            table_total.html(jqXHR.responseJSON.total);
                                            table_total.removeClass('label-danger');
                                            table_total.removeClass('label-warning');
                                            table_total.removeClass('label-success');

                                            if (jqXHR.responseJSON.duration < 7) {
                                                table_total.addClass('label-warning');
                                            } else if (jqXHR.responseJSON.duration > 7) {
                                                table_total.addClass('label-danger');
                                            } else {
                                                table_total.addClass('label-success');
                                            }
                                        });
                                    }
                                }
                            });
                        }
                    });
                }

                return false;
            });

            initProjectSelection(
                    $('.timesheet-quick-task select.form-field-client'),
                    $('.timesheet-quick-task select.form-field-project'),
                    $('.timesheet-quick-task select.form-field-contract')
            );

            function initProjectSelection(client, project, contract) {
                client.each(function () {
                    $(this).select2({
                        allowClear: true,
                        width: '100%'
                    });

                    $(this).change(function () {
                        var project_group = project.closest('.form-group');
                        project.select2('val', '');

                        if ($(this).val()) {
                            project_group.removeClass('hidden');
                            project_group.show();
                        } else {
                            project_group.hide();
                        }

                        var contract_group = contract.closest('.form-group');
                        contract_group.hide();
                        contract.select2('val', '');
                    });
                });

                project.each(function () {
                    $(this).select2({
                        matcher: function (term, text, option) {
                            // Check client
                            var id = client.val();
                            var label = option[0].textContent;

                            if (label.indexOf(id + ':') !== 0) {
                                return false;
                            }

                            return text.toUpperCase().indexOf(term.toUpperCase()) >= 0;
                        },
                        formatResult: function (item) {
                            var originalOption = item.element;
                            return item.text.replace(/^\s*([0-9]+:)/, '');
                        },
                        formatSelection: function (item) {
                            var originalOption = item.element;
                            return item.text.replace(/^\s*([0-9]+:)/, '');
                        },
                        allowClear: true,
                        width: '100%'
                    });

                    $(this).change(function () {
                        var contract_group = contract.closest('.form-group');
                        contract.select2('val', '');

                        if ($(this).val()) {
                            contract_group.removeClass('hidden');
                            contract_group.show();
                        } else {
                            contract_group.hide();
                        }
                    });
                });

                contract.each(function () {
                    $(this).select2({
                        matcher: function (term, text, option) {
                            // Check client
                            var id = project.val();
                            var label = option[0].textContent;

                            if (label.indexOf(id + ':') !== 0) {
                                return false;
                            }

                            return text.toUpperCase().indexOf(term.toUpperCase()) >= 0;
                        },
                        formatResult: function (item) {
                            var originalOption = item.element;
                            return item.text.replace(/^\s*([0-9]+:)/, '');
                        },
                        formatSelection: function (item) {
                            var originalOption = item.element;
                            return item.text.replace(/^\s*([0-9]+:)/, '');
                        },
                        allowClear: true,
                        width: '100%'
                    });
                });
            }


        });
        </script>
    {% endblock foot_script %}
    {% endblock body %}

    {% block body_end %}
    {% endblock body_end %}
</body>
</html>
{% endspaceless %}