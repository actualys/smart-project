<?php

namespace SmartProject\ProjectBundle\Entity;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends BaseProjectRepository
{
    /**
     * @see getChildrenQueryBuilder
     */
    public function childrenQueryBuilder(
        $node = null,
        $direct = false,
        $sortByField = null,
        $direction = 'ASC',
        $includeNode = false
    ) {
        $queryBuilder = parent::childrenQueryBuilder($node, $direct, $sortByField, $direction, $includeNode);

        $queryBuilder
          ->resetDQLPart('from')
          ->from('SmartProject\ProjectBundle\Entity\Project', 'node')
          ->orderBy('node.root', 'asc')
          ->addOrderBy('node.lft', 'asc');

        return $queryBuilder;
    }

    /**
     * @param object      $node
     * @param string|null $sortByField
     * @param string      $direction
     * @param bool        $verify
     */
    public function reorder($node, $sortByField = null, $direction = 'ASC', $verify = true)
    {
        $abstractRepository = $this->_em->getRepository('SmartProjectProjectBundle:BaseProject');

        return $abstractRepository->reorder($node, $sortByField, $direction, $verify);
    }

    /**
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getProjectsWithoutClientQueryBuilder()
    {
        return $this->childrenQueryBuilder()
          ->from('SmartProject\ProjectBundle\Entity\BaseProject', 'root')
          ->andWhere('root.id = node.root')
          ->andWhere('root NOT INSTANCE OF \SmartProject\ProjectBundle\Entity\Client')
          ->orderBy('root.name', 'asc')
          ->addOrderBy('node.lft', 'asc');
    }

    /**
     * @return mixed
     */
    public function getProjectsWithoutClient()
    {
        return $this->getProjectsWithoutClientQueryBuilder()->getQuery()->execute();
    }
}
